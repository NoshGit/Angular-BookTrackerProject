{"version":3,"sources":["./src/app/add-book/add-book.component.html","./src/app/add-book/add-book.component.ts","./src/app/app.component.css","./src/app/data.ts","./src/environments/environment.ts","./src/app/services/badge.service.ts","./src/app/edit-book/edit-book.component.ts","./src/app/services/data.service.ts","./src/app/dashboard/dashboard.component.html","./src/app/add-reader/add-reader.component.html","./src/app/services/logger.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/add-reader/add-reader.component.ts","./src/app/app.module.ts","./src/app/edit-reader/edit-reader.component.html","./src/app/edit-book/edit-book.component.html","./src/app/edit-reader/edit-reader.component.ts","./src/app/services/bt-error-handler.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe,m9CAAo5C,E;;;;;;;;;;;;;;;;;;;;ACAj3C;AAGM;IAO3C,gBAAgB,SAAhB,gBAAgB;IAE3B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ,KAAK,CAAC;IAEd,QAAQ,CAAC,UAAe;QACtB,IAAI,OAAO,GAAe,UAAU,CAAC;QACrC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAErB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC;aAChC,SAAS,CACR,CAAC,IAAU,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CACpD;IAEH,CAAC;CAEF;;YAzBQ,qEAAW;;AAOP,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qFAAwC;KAEzC,CAAC;GACW,gBAAgB,CAkB5B;AAlB4B;;;;;;;;;;;;;ACV7B;AAAe,6GAA8C,mHAAmH,E;;;;;;;;;;;;ACGhL;AAAA;AAAA;AAAO,MAAM,UAAU,GAAa;IAChC,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,iBAAiB,EAAE,GAAG,EAAE,gBAAgB,EAAE,IAAI,EAAE;IAC9E,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,iBAAiB,EAAE,GAAG,EAAE,gBAAgB,EAAE,IAAI,EAAE;IAC/E,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,iBAAiB,EAAE,GAAG,EAAE,gBAAgB,EAAE,GAAG,EAAE;CAC/E,CAAC;AAEG,MAAM,QAAQ,GAAW;IAC5B,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,qBAAqB,EAAE,eAAe,EAAE,IAAI,EAAE;IAC5F,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,oBAAoB,EAAE,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,IAAI,EAAE;IACtF,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,MAAM,EAAE,gBAAgB,EAAE,eAAe,EAAE,IAAI,EAAE;IAClG,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,kBAAkB,EAAE,eAAe,EAAE,IAAI,EAAE;IACrF,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,IAAI,EAAE;IAClF,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,mCAAmC,EAAE,MAAM,EAAE,eAAe,EAAE,eAAe,EAAE,IAAI,EAAE;CAC5G,CAAC;;;;;;;;;;;;;AChBF;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;;;;ACPyC;IAG9B,YAAY,SAAZ,YAAY;IAEvB,gBAAgB,CAAC;IAEjB,eAAe,CAAC,OAAe;QAC7B,IAAG,OAAO,GAAG,IAAI,EAAC;YAChB,OAAO,WAAW,CAAC;SACpB;aAAK,IAAG,OAAO,GAAG,IAAI,EAAC;YACtB,OAAO,aAAa,CAAC;SACtB;aAAI;YACH,OAAO,iBAAiB,CAAC;SAC1B;IACH,CAAC;CACF;;AAbY,YAAY;IADxB,gEAAU,EAAE;GACA,YAAY,CAaxB;AAbwB;;;;;;;;;;;;;;;;;;;;;;;ACFyB;AACD;AAIO;AACI;IAO/C,iBAAiB,SAAjB,iBAAiB;IAI5B,YAAoB,KAAqB,EAAU,WAAwB,EACjE,MAAqB;QADX,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QACjE,WAAM,GAAN,MAAM,CAAe;IACzB,CAAC;IAEP,QAAQ;QACN,IAAI,MAAM,GAAW,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC;aACnC,SAAS,CACR,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,EACvC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,GAAG,CAAC,CACnD,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAC3C,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,kBAAkB,IAAI,CAAC,SAAS,EAAE,CAAC,CACtE;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,0BAA0B,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC;IACvE,CAAC;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC;aAC7C,SAAS,CACR,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,gCAAgC,CAAC,EACjF,CAAC,GAAO,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAC,GAAG,CAAC,CACxD;IACH,CAAC;CACF;;YA7CQ,8DAAc;YAId,qEAAW;YACX,yEAAa;;AAOT,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,sFAAyC;KAE1C,CAAC;GACW,iBAAiB,CAiC7B;AAjC6B;;;;;;;;;;;;;;;;;;;;;;;ACdoD;AACvC;AACK;AAKF;AACQ;AACL;IAKpC,WAAW,SAAX,WAAW;IAEtB,YAAoB,MAAqB,EAAU,IAAgB;QAA/C,WAAM,GAAN,MAAM,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAY;QAEnE,oBAAe,GAAS,iDAAQ,CAAC,CAAC,CAAC,CAAC;IAFmC,CAAC;IAIxE,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,cAAc,CAAC;aAC7C,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,KAAwB;QAClC,IAAI,SAAS,GAAc;YACzB,WAAW,EAAE,GAAG;YAChB,OAAO,EAAE,KAAK,CAAC,UAAU;YACzB,SAAS,EAAE,sDAAsD;SAClE;QAED,OAAO,uDAAU,CAAC,SAAS,CAAC,CAAC;IAC/B,CAAC;IAED,qBAAqB;IAErB,uBAAuB,CAAC,EAAS;QAC/B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAC,EAAE;YACpC,UAAU,CAAC,GAAE,EAAE;gBACb,IAAG,EAAE,GAAG,CAAC,EAAC;oBACR,OAAO,CAAC,UAAU,CAAC,CAAC;iBACrB;qBAAI;oBACH,MAAM,CAAC,mBAAmB,CAAC,CAAC;iBAC7B;YACH,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,OAAO,mDAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,YAAY,CAAC,CAAC;IAC7C,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAC;QACpD,IAAI,SAAS,GAAgB,IAAI,gEAAW,CAAC;YAC3C,QAAQ,EAAC,kBAAkB;YAC3B,cAAc,EAAE,iBAAiB;SAClC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,cAAc,EAAE,EAAE,EAAE;YAC7C,OAAO,EAAE,SAAS;SACnB,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,EAAS;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,cAAc,EAAE,EAAE,CAAC;aAC7C,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAS;YACnB,SAAS,EAAE,IAAI,CAAC,KAAK;YACrB,IAAI,EAAE,IAAI,CAAC,eAAe;SAC3B,EAAC,EACF,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC,CACrD,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,WAAiB;QAClC,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC;IACrC,CAAC;IAED,OAAO,CAAC,IAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,YAAY,EAAE,IAAI,EAAE;YAC9C,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,cAAc,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE;YAC5D,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,cAAc,MAAM,EAAE,CAAC,CAAC;IACxD,CAAC;CAEF;;YAlGQ,6DAAa;YATb,+DAAU;;AAcN,WAAW;IAHvB,gEAAU,EAAC;;OAET,CAAC;GACS,WAAW,CA6FvB;AA7FuB;;;;;;;;;;;;;ACdxB;AAAe,qYAAsU,YAAY,wfAAwf,aAAa,ydAAyd,uBAAuB,UAAU,wBAAwB,6DAA6D,E;;;;;;;;;;;;ACAr7C;AAAe,i/CAAk7C,E;;;;;;;;;;;;;;;;;ACAt5C;IAM9B,aAAa,SAAb,aAAa;IACtB,GAAG,CAAC,OAAY;QACZ,MAAM,IAAI,GAAW,IAAI,IAAI,EAAE,CAAC,kBAAkB,EAAE,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,KAAK,IAAI,GAAG,CAAC,CAAC;IACxC,CAAC;IAED,KAAK,CAAC,OAAW,EAAE,QAAa;QAC5B,OAAO,CAAC,KAAK,CAAC,UAAU,OAAO,IAAI,QAAQ,EAAE,CAAC,CAAC;IACnD,CAAC;CACJ;AATY,aAAa;IAJzB,gEAAU,EAAC;;OAET,CAAC;GAES,aAAa,CASzB;AATyB;;;;;;;;;;;;;;;;;;;;;;;ACNiC;AACT;AAGU;AACJ;IAQ3C,kBAAkB,SAAlB,kBAAkB;IAM7B,YAAoB,MAAqB,EAAU,WAAwB,EAAU,KAAY;QAA7E,WAAM,GAAN,MAAM,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAO;QAC/F,MAAM,CAAC,GAAG,CAAC,gCAAgC,qDAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;QAE7C,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CACxC,CAAC,IAA0B,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,GAAa,IAAI,EAChE,CAAC,KAAe,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,EACrD,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAC5D,CAAC;QAEF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;QAExD,uCAAuC;QAEvC,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC,CAAC;aAC1C,IAAI,CACH,CAAC,MAAa,EAAE,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,qBAAqB,MAAM,EAAE,CAAC;YAC9C,kDAAkD;QACpD,CAAC,EACD,CAAC,KAAY,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,8BAA8B,KAAK,EAAE,CAAC,CAC3E;aACA,KAAK,CAAC,CAAC,KAAW,EAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QAE3E,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAEpD,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;IAEvC,CAAC;IAED,4CAA4C;IAE5C;;;;;;;;QAQI;IAEJ,UAAU,CAAC,MAAc;QACvB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC;aAClC,SAAS,CACR,GAAE,EAAE;YACF,IAAI,KAAK,GAAW,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC;YAC3E,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAC3C,CAAC,CACF;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aAC7B,SAAS,CACR,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,EACrC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EACvB,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,6BAA6B,CAAC,CACrD,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,QAAgB;QAC3B,OAAO,CAAC,IAAI,CAAC,gDAAgD,QAAQ,IAAI,CAAC,CAAC;IAC7E,CAAC;CAEF;;YArFQ,yEAAa;YACb,qEAAW;YAJX,+DAAK;;AAYD,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,sFAAyC;KAE1C,CAAC;GACW,kBAAkB,CA4E9B;AA5E8B;;;;;;;;;;;;;;;;;;;;;;ACbW;IAO7B,YAAY,SAAZ,YAAY;;QACvB,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;CAAA;AAFY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gFAAmC;;KAEpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;ACPzB;AAAe,+vCAAgsC,E;;;;;;;;;;;;;;;;;;;ACA7pC;IASrC,kBAAkB,SAAlB,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ,KAAK,CAAC;IAEd,UAAU,CAAC,UAAe;QACxB,IAAI,SAAS,GAAmB,UAAU,CAAC;QAC3C,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,OAAO,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;IACvD,CAAC;CAEF;;AAbY,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,uFAA0C;KAE3C,CAAC;GACW,kBAAkB,CAa9B;AAb8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT2B;AACH;AACV;AACW;AAES;AACM;AACxB;AACS;AACa;AACD;AACM;AACpB;AACI;AAEkB;IA8B/D,SAAS,SAAT,SAAS;CAAI;AAAb,SAAS;IA5BrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,iFAAkB;YAClB,6EAAgB;YAChB,uFAAmB;YACnB,iFAAiB;YACjB,mFAAkB;SACnB;QACD,OAAO,EAAE;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;SACjB;QACD,SAAS,EAAE;YACT;;;;;4FAKgF;YAChF,uEAAa;YACb,mEAAW;YACX,EAAC,OAAO,EAAE,0DAAY,EAAE,QAAQ,EAAE,yFAAqB,EAAC;SACzD;QACD,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;AC7CtB;AAAe,87CAA+3C,eAAe,6SAA6S,E;;;;;;;;;;;;ACA1sD;AAAe,4nDAA6jD,E;;;;;;;;;;;;;;;;;;;;;;ACA1hD;AACD;AAGS;AACF;IAQ3C,mBAAmB,SAAnB,mBAAmB;IAI9B,YAAoB,KAAqB,EAAU,WAAwB,EAAU,KAAmB;QAApF,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAc;IAAI,CAAC;IAE7G,QAAQ;QACN,IAAI,QAAQ,GAAW,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;IACtF,CAAC;IAED,WAAW;QACT,OAAO,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;IACnD,CAAC;CACF;;YA3BQ,8DAAc;YAId,qEAAW;YADX,uEAAY;;AASR,mBAAmB;IAN/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wFAA2C;QAE3C,SAAS,EAAC,CAAC,uEAAY,CAAC;KACzB,CAAC;GACW,mBAAmB,CAe/B;AAf+B;;;;;;;;;;;;;;;;;;ACbyB;IAI5C,qBAAqB,SAArB,qBAAqB;IAEhC,gBAAgB,CAAC;IACjB,WAAW,CAAC,KAAU;QACpB,IAAI,UAAU,GAAW;YACvB,WAAW,EAAC,GAAG;YACf,OAAO,EAAS,KAAM,CAAC,OAAO;YAC9B,SAAS,EAAC,qDAAqD;SAChE;QAED,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC1B,CAAC;CACF;;AAZY,qBAAqB;IADjC,gEAAU,EAAE;GACA,qBAAqB,CAYjC;AAZiC;;;;;;;;;;;;;;;;;;;;;;;;ACJO;AACc;AAEY;AACM;AACF;AACD;AACM;AAE5E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,oFAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,gFAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,sFAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,yFAAmB,EAAE;IAC1D,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,mFAAiB,EAAE;IACtD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;CACzD,CAAC;IAMW,gBAAgB,SAAhB,gBAAgB;CAAI;AAApB,gBAAgB;IAJ5B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;;ACtB7B;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC,CAAC;;;;;;;;;;;;ACVpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form #addBookForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(addBookForm.value)\\\" class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Add New Book</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" name=\\\"author\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" name=\\\"publicationYear\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","import { Component, OnInit } from '@angular/core';\n\nimport { Book } from \"app/models/book\";\nimport { DataService } from 'app/services/data.service';\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styles: []\n})\nexport class AddBookComponent implements OnInit {\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() { }\n\n  saveBook(formValues: any): void {\n    let newBook: Book = <Book>formValues;\n    newBook.bookID = 0;\n    console.log(newBook);\n    \n    this.dataService.addBook(newBook)\n    .subscribe(\n      (data: Book) => console.log('New Book Added', data)\n    )\n    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","import { Book } from \"app/models/book\";\nimport { Reader } from \"app/models/reader\";\n\nexport const allReaders: Reader[] = [\n    { readerID: 1, name: 'Marie', weeklyReadingGoal: 400, totalMinutesRead: 5600 },\n    { readerID: 2, name: 'Daniel', weeklyReadingGoal: 210, totalMinutesRead: 3000 },\n    { readerID: 3, name: 'Lanier', weeklyReadingGoal: 140, totalMinutesRead: 600 }\n  ];\n\nexport const allBooks: Book[] = [\n    { bookID: 1, title: 'Goodnight Moon', author: 'Margaret Wise Brown', publicationYear: 1953 },\n    { bookID: 2, title: 'Green Eggs and Ham', author: 'Dr. Seuss', publicationYear: 1960 },\n    { bookID: 3, title: 'Where the Wild Things Are', author: 'Maurice Sendak', publicationYear: 1963 },\n    { bookID: 4, title: 'The Hobbit', author: 'J. R. R. Tolkien', publicationYear: 1937 },\n    { bookID: 5, title: 'Curious George', author: 'H. A. Rey', publicationYear: 1941 },\n    { bookID: 6, title: 'Alice\\'s Adventures in Wonderland', author: 'Lewis Carroll', publicationYear: 1865 },\n];","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BadgeService {\n\n  constructor() { }\n\n  setReadersBadge(minutes: number): string {\n    if(minutes < 5000){\n      return 'Book Worm';\n    }else if(minutes < 2500){\n      return 'Page Turner';\n    }else{\n      return 'Getting Started';\n    }\n  }\n}\n","import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Book } from 'app/models/book';\nimport { OldBook } from 'app/models/oldBook';\nimport { DataService } from 'app/services/data.service';\nimport { LoggerService } from 'app/services/logger.service';\n\n@Component({\n  selector: 'app-edit-book',\n  templateUrl: './edit-book.component.html',\n  styles: []\n})\nexport class EditBookComponent implements OnInit {\n\n  selectedBook: Book;\n\n  constructor(private route: ActivatedRoute, private dataService: DataService,\n    private logger: LoggerService\n    ) { }\n\n  ngOnInit() {\n    let bookID: number = parseInt(this.route.snapshot.params['id']);\n    this.dataService.getBookById(bookID)\n    .subscribe(\n      (data:Book) => this.selectedBook = data,\n      err => console.error('Loggin Get Book Error', err)\n    );\n\n    this.dataService.getOldBook(bookID).subscribe(\n      (data:OldBook) => this.logger.log(`Old Book Tile: ${data.bookTitle}`)\n    )\n  }\n\n  setMostPopular(): void {\n    this.dataService.setMostPopularBook(this.selectedBook);\n    this.logger.log(`New Most Popular Book \"${this.selectedBook.title}\"`)\n  }\n\n  saveChanges(): void {\n    this.dataService.updateBook(this.selectedBook)\n    .subscribe(\n      () => this.logger.log(`${this.selectedBook.title} has been updated successfully`),\n      (err:any) => this.logger.error('Update Book Error',err)\n    )\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { allBooks, allReaders } from 'app/data';\nimport { AppErrors } from 'app/models/app-errors';\nimport { Book } from 'app/models/book';\nimport { OldBook } from 'app/models/oldBook';\nimport { Reader } from 'app/models/reader';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { LoggerService } from './logger.service';\n\n@Injectable(/*{\n  providedIn: 'root'\n}*/)\nexport class DataService {\n\n  constructor(private logger: LoggerService, private http: HttpClient) { }\n\n  mostPopularBook: Book = allBooks[0];\n\n  getAllReaders(): Observable <Reader[] | AppErrors> {\n    return this.http.get<Reader[]>('/api/readers')\n    .pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  handleError(error: HttpErrorResponse): Observable<AppErrors>{\n    let dataError : AppErrors ={\n      errorNumber: 500,\n      message: error.statusText,\n      customMsg: 'There is some issue with Server, Please try later!!!'\n    }\n    \n    return throwError(dataError);\n  }\n\n  /**Promise Example */\n\n  getAuthorRecommendation(id:number): Promise<string> {\n    return new Promise((resolve, reject)=> {\n      setTimeout(()=>{\n        if(id > 0){\n          resolve('Dr. Zeus');\n        }else{\n          reject('Invalid Reader ID');\n        }\n      }, 2000);\n    });\n  }\n\n  getReaderById(id: number): Reader {\n    return allReaders.find(reader => reader.readerID === id);\n  }\n  \n  getallBooks(): Observable<Book[]> {\n    this.logger.log('Getting All Books from Server');\n    return this.http.get<Book[]>('/api/books');\n  }\n\n  getBookById(id: number): Observable<Book>{\n    this.logger.log(`Getting Books #${id} from Server`);\n    let getHeader: HttpHeaders = new HttpHeaders({\n      'Accept':'application/json',\n      'Autorization': 'Bearer my-token'\n    });\n\n    return this.http.get<Book>(`/api/books/${id}`, {\n      headers: getHeader\n    });\n  }\n\n  getOldBook(id:number): Observable<OldBook> {\n    return this.http.get<Book>(`/api/books/${id}`)\n    .pipe(\n      map(book => <OldBook>{\n        bookTitle: book.title,\n        year: book.publicationYear\n      }),\n      tap(oldbook => console.log('Classic Book', oldbook))\n    );\n  }\n\n  setMostPopularBook(popularBook: Book): void {\n    this.mostPopularBook = popularBook;\n  }\n\n  addBook(book: Book): Observable<Book> {\n    return this.http.post<Book>('/api/books', book, {\n      headers: new HttpHeaders({\n        'content-type': 'application/json'\n      })\n    });\n  }\n\n  updateBook(book: Book): Observable<void> {\n    return this.http.put<void>(`/api/books/${book.bookID}`, book, {\n      headers: new HttpHeaders({\n        'content-type': 'application/json'\n      })\n    });\n  }\n\n  deleteBook(bookID: number): Observable<void> {\n    return this.http.delete<void>(`/api/books/${bookID}`);\n  }\n\n}\n","export default \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">All Books</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n        <li *ngFor='let book of allBooks'>\\n          <i>{{book.title}}</i>\\n          <a [routerLink]=\\\"['/editbook', book.bookID]\\\"> Edit </a>\\n          <a (click)=\\\"deleteBook(book.bookID)\\\">Delete</a>\\n        </li>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">All Readers</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n        <li *ngFor='let reader of allReaders'>\\n          {{reader.name}}\\n          <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\n          <a (click)=\\\"deleteReader(reader.readerID)\\\"> Delete </a>\\n        </li>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Most Popular Book</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <i>{{mostPopularBook.title}}</i> by {{mostPopularBook.author}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form #addReaderForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\" class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Add Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" name=\\\"weeklyReadingGoal\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" name=\\\"totalMinutesRead\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable(/*{\r\n    providedIn: 'root'\r\n}*/)\r\n\r\nexport class LoggerService {\r\n    log(message: any): void{\r\n        const time: string = new Date().toLocaleTimeString();\r\n        console.log(`${message} (${time})`);\r\n    }\r\n\r\n    error(message:any, message2?:any): void {\r\n        console.error(`ERROR: ${message} ${message2}`);\r\n    }\r\n}","import { Component, OnInit, VERSION } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Book } from \"app/models/book\";\nimport { Reader } from \"app/models/reader\";\nimport { LoggerService } from 'app/services/logger.service';\nimport { DataService } from 'app/services/data.service';\nimport { AppErrors } from 'app/models/app-errors';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styles: []\n})\nexport class DashboardComponent implements OnInit {\n\n  allBooks: Book[];\n  allReaders: Reader[];\n  mostPopularBook: Book;\n\n  constructor(private logger: LoggerService, private dataService: DataService, private title: Title) { \n    logger.log(`Dashboard Constructor Loaded ${VERSION.full}`);\n  }\n\n  ngOnInit() {\n    this.getAllBooks();\n    this.title.setTitle(`Book Title - Dashbord`);\n\n    this.dataService.getAllReaders().subscribe(\n      (data: Reader[] | AppErrors) => this.allReaders = <Reader[]>data,\n      (error:AppErrors) => this.logger.log(error.customMsg),\n      () => this.logger.log('Get All Readers Observable Done!!!')\n    );\n\n    this.mostPopularBook = this.dataService.mostPopularBook;\n    \n    //this.getAutorrecommendationAsync(-1);\n    \n    this.dataService.getAuthorRecommendation(1)\n    .then(\n      (author:string) => {\n        this.logger.log(`Recomended Author:${author}`)\n        //throw new Error('There was something Wrong!!!');\n      },\n      (error:string) => this.logger.error(`This Promise was Rejected: ${error}`)\n    )\n    .catch((error:Error)=> this.logger.error(`From: Promise:${error.message}`))\n\n    this.logger.log('Done With DashBoard Construction');\n\n    throw new Error('Some this is Ugly');\n    \n  }\n\n  /**Workng on Promise with Async and Await */\n\n  /*private async getAutorrecommendationAsync(readerId:number): Promise<void>{\n    try{\n      let author:string = await this.dataService.getAuthorRecommendation(readerId);\n      this.logger.log(`Recomended Author from Async:${author}`);\n    }\n    catch(error){\n      this.logger.error(error);\n    }\n  } */\n\n  deleteBook(bookID: number): void {\n    this.dataService.deleteBook(bookID)\n    .subscribe(\n      ()=> {        \n        let index: number = this.allBooks.findIndex(book => book.bookID === bookID)\n        this.allBooks.splice(index, 1);\n        console.log(`Book Deleted Successfully`);\n      }\n    )\n  }\n\n  getAllBooks(): void {\n    this.dataService.getallBooks()\n    .subscribe(\n      (data:Book[]) => this.allBooks = data,\n      err => console.log(err),\n      () => this.logger.log('Getting All Books Completed')\n    );\n  }\n\n  deleteReader(readerID: number): void {\n    console.warn(`Delete reader not yet implemented (readerID: ${readerID}).`);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","export default \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <!-- Brand and toggle get grouped for better mobile display -->\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Book Tracker</a>\\n        </div>\\n\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li><a [routerLink]=\\\"['/addbook']\\\">Add Book<span class=\\\"sr-only\\\">(current)</span></a></li>\\n                <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\n            </ul>\\n        </div><!-- /.navbar-collapse -->\\n    </div><!-- /.container-fluid -->\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\";","import { Component, OnInit } from '@angular/core';\n\nimport { Reader } from \"app/models/reader\";\n\n@Component({\n  selector: 'app-add-reader',\n  templateUrl: './add-reader.component.html',\n  styles: []\n})\nexport class AddReaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  saveReader(formValues: any): void {\n    let newReader: Reader = <Reader>formValues;\n    newReader.readerID = 0;\n    console.log(newReader);\n    console.warn('Save new reader not yet implemented.');\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AddBookComponent } from './add-book/add-book.component';\nimport { AddReaderComponent } from './add-reader/add-reader.component';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { EditBookComponent } from './edit-book/edit-book.component';\nimport { EditReaderComponent } from './edit-reader/edit-reader.component';\nimport { DataService } from './services/data.service';\nimport { LoggerService } from './services/logger.service';\nimport { dataFactoryService } from './services/data.service.factory';\nimport { BtErrorHandlerService } from './services/bt-error-handler.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    AddBookComponent,\n    EditReaderComponent,\n    EditBookComponent,\n    AddReaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    /*{provide: DataService, useClass: DataService},    \n    {provide: LoggerService, useValue:{\n      log: (message:string)=> console.log('MESSAGE:', message),\n      error: (message:string)=> console.error('ERROR:', message)\n    }},\n    {provide: DataService, useFactory: dataFactoryService, deps:[LoggerService]}, */ \n    LoggerService,\n    DataService,\n    {provide: ErrorHandler, useClass: BtErrorHandlerService}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedReader.name\\\" name=\\\"name\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" [(ngModel)]=\\\"selectedReader.weeklyReadingGoal\\\" name=\\\"weeklyReaddingGoal\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" [(ngModel)]=\\\"selectedReader.totalMinutesRead\\\" name=\\\"totalMinutesRead\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\" class=\\\"col-lg-3 control-label\\\">Current Badge:</label>\\n          <div class=\\\"col-lg-8 mt-1\\\">{{ readerBadge }}</div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Book</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"selectedBook.title\\\" name=\\\"title\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" [(ngModel)]=\\\"selectedBook.author\\\" name=\\\"author\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" [(ngModel)]=\\\"selectedBook.publicationYear\\\" name=\\\"publicationYear\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"setMostPopular()\\\">Set As Most Popular</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Reader } from \"app/models/reader\";\nimport { BadgeService } from 'app/services/badge.service';\nimport { DataService } from 'app/services/data.service';\n\n@Component({\n  selector: 'app-edit-reader',\n  templateUrl: './edit-reader.component.html',\n  styles: [],\n  providers:[BadgeService]\n})\nexport class EditReaderComponent implements OnInit {\n\n  selectedReader: Reader;\n  readerBadge: string;\n  constructor(private route: ActivatedRoute, private dataService: DataService, private badge: BadgeService) { }\n\n  ngOnInit() {\n    let readerID: number = parseInt(this.route.snapshot.params['id']);\n    this.selectedReader = this.dataService.getReaderById(readerID);\n    this.readerBadge = this.badge.setReadersBadge(this.selectedReader.totalMinutesRead);\n  }\n\n  saveChanges() {\n    console.warn('Save reader not yet implemented.');\n  }\n}\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { AppErrors } from 'app/models/app-errors';\n\n@Injectable()\nexport class BtErrorHandlerService implements ErrorHandler {\n\n  constructor() { }\n  handleError(error: any): void {\n    var catchError:AppErrors={\n      errorNumber:500,\n      message:(<Error>error).message,\n      customMsg:'Oops!!!Looks Like Something in Application is Wrong'\n    }\n\n    console.log(catchError);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AddBookComponent } from \"app/add-book/add-book.component\";\nimport { AddReaderComponent } from \"app/add-reader/add-reader.component\";\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\nimport { EditBookComponent } from \"app/edit-book/edit-book.component\";\nimport { EditReaderComponent } from \"app/edit-reader/edit-reader.component\";\n\nconst routes: Routes = [\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'addbook', component: AddBookComponent },\n  { path: 'addreader', component: AddReaderComponent },\n  { path: 'editreader/:id', component: EditReaderComponent },\n  { path: 'editbook/:id', component: EditBookComponent },\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}